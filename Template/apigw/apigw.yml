AWSTemplateFormatVersion: 2010-09-09
Description: ApiGateway

Parameters:
  SystemName:
    Type: String
    AllowedPattern: '[a-zA-Z0-9-]*'
  EnvType:
    Description: Environment type.
    Type: String
    AllowedValues: [all, dev, stg, prod]
    ConstraintDescription: must specify all, dev, stg, or prod.
  HTTPProtocol:
    Type: String
  # APIPathPart:
  #   Type: String
  isKeyRequired:
    Type: String
  APIGatewayStage:
    Type: String
  isLogging:
    Type: String
  ACMArn:
    Type: String

Mappings:
  AzMap:
    ap-northeast-1:
      1st: ap-northeast-1a
      2nd: ap-northeast-1c
      3rd: ap-northeast-1d

Resources:
  # ApiGatewayAccount 作成
  ApiGatewayAccount:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::ImportValue: !Sub
          - ${SystemName}-${EnvType}-role-apigw-cloudwatch-${AWS::Region}
          - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}

  # ApiGateway 作成
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    DependsOn: ApiGatewayAccount
    Properties:
      Name: !Sub
        - ${SystemName}-${EnvType}-apigw
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      Description: !Sub
        - ${SystemName}-${EnvType}-apigw
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      ApiKeySourceType: 'HEADER'
      EndpointConfiguration:
        Types:
          - REGIONAL
      Tags:
        - Key: Name
          Value: !Sub
          - ${SystemName}-${EnvType}-apigw
          - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
        - Key: SystemName
          Value: !Ref SystemName
        - Key: EnvType
          Value: !Ref EnvType

  # ApiGatewayResourceMethodGet 作成
  ApiGatewayResourceMethodGet:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ResourceId: !GetAtt ApiGatewayRestApi.RootResourceId
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: !Ref isKeyRequired
      RequestParameters: {}
      MethodResponses:
        - ResponseModels:
            application/json: Empty
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: false
          StatusCode: 200
      Integration:
        CacheNamespace: !GetAtt ApiGatewayRestApi.RootResourceId
        ConnectionType: INTERNET
        IntegrationHttpMethod: GET
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates: {}
            StatusCode: 200
        PassthroughBehavior: WHEN_NO_MATCH
        TimeoutInMillis: 29000
        Type: HTTP
        Uri: !Join
          - ''
          - - !Ref HTTPProtocol
            - '://'
            - Fn::ImportValue: !Sub
              - ${SystemName}-${EnvType}-api-alb-dns
              - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}

  # ApiGatewayResourceMethodOptions 作成
  ApiGatewayResourceMethodOptions:
    Type: AWS::ApiGateway::Method
    DependsOn: ApiGatewayResourceMethodGet
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ResourceId: !GetAtt ApiGatewayRestApi.RootResourceId
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      RequestParameters: {}
      MethodResponses:
        - ResponseModels:
            application/json: Empty
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
          StatusCode: 200
      Integration:
        CacheNamespace: !GetAtt ApiGatewayRestApi.RootResourceId
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates: {}
            StatusCode: 200
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: "{\"statusCode\": 200}"
        TimeoutInMillis: 29000
        Type: MOCK

  # ApiGatewayDeployment 作成
  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiGatewayResourceMethodOptions
    Properties:
      Description: !Sub
        - ${SystemName}-${EnvType}-apigw-deployment
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      RestApiId: !Ref ApiGatewayRestApi

  # ApiGatewayStage 作成
  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    DependsOn: ApiGatewayDeployment
    Properties:
      DeploymentId: !Ref ApiGatewayDeployment
      Description: !Sub
        - ${SystemName}-${EnvType}-apigw-stage
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      CacheClusterEnabled: false
      CacheClusterSize: '0.5'
      MethodSettings:
        - CacheDataEncrypted: false
          CacheTtlInSeconds: 300
          CachingEnabled: false
          DataTraceEnabled: !Ref isLogging # CloudWatch ログを有効化
          HttpMethod: '*'
          MetricsEnabled: !Ref isLogging # 詳細 CloudWatch メトリクスを有効化
          ResourcePath: '/*'
          ThrottlingBurstLimit: 5000
          ThrottlingRateLimit: 10000
      RestApiId: !Ref ApiGatewayRestApi
      StageName: !Ref APIGatewayStage
      Tags:
        - Key: Name
          Value: !Sub
          - ${SystemName}-${EnvType}-apigw-stage
          - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
        - Key: SystemName
          Value: !Ref SystemName
        - Key: EnvType
          Value: !Ref EnvType
      TracingEnabled: !Ref isLogging # X-Ray トレースの有効化

  # ApiGatewayAPIKey 作成
  ApiGatewayKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Name: !Sub
        - ${SystemName}-${EnvType}-apigw-key
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      Description: !Sub
        - ${SystemName}-${EnvType}-apigw-key
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      Enabled: true
      Tags:
        - Key: Name
          Value: !Sub
          - ${SystemName}-${EnvType}-apigw-key
          - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
        - Key: SystemName
          Value: !Ref SystemName
        - Key: EnvType
          Value: !Ref EnvType

  # ApiGatewayUsagePlan 作成
  ApiGatewayUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    DependsOn: ApiGatewayStage
    Properties:
      ApiStages:
        - ApiId: !Ref ApiGatewayRestApi
          Stage: !Ref APIGatewayStage
      Description: !Sub
        - ${SystemName}-${EnvType}-apigw-usage-plan
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      UsagePlanName: !Sub
        - ${SystemName}-${EnvType}-apigw-usage-plan
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      Tags:
        - Key: Name
          Value: !Sub
          - ${SystemName}-${EnvType}-apigw-usage-plan
          - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
        - Key: SystemName
          Value: !Ref SystemName
        - Key: EnvType
          Value: !Ref EnvType

  # ApiGatewayUsagePlanKey 作成
  ApiGatewayUsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref ApiGatewayKey
      KeyType: API_KEY
      UsagePlanId: !Ref ApiGatewayUsagePlan

  # # ApiGateway カスタムドメイン 作成
  # ApiGatewayDomainName:
  #   Type: AWS::ApiGateway::DomainName
  #   DependsOn: ApiGatewayUsagePlan
  #   Properties:
  #     DomainName:
  #       Fn::ImportValue: !Sub
  #         - ${SystemName}-${EnvType}-acm-domain
  #         - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
  #     EndpointConfiguration:
  #       Types:
  #         - REGIONAL
  #     RegionalCertificateArn:
  #       Fn::ImportValue: !Sub
  #         - ${SystemName}-${EnvType}-acm
  #         - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
  #     SecurityPolicy: TLS_1_2
  #     Tags:
  #       - Key: Name
  #         Value: !Sub
  #         - ${SystemName}-${EnvType}-apigw-domain
  #         - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
  #       - Key: SystemName
  #         Value: !Ref SystemName
  #       - Key: EnvType
  #         Value: !Ref EnvType
  # ApiGatewayApiMapping:
  #   Type: AWS::ApiGatewayV2::ApiMapping
  #   DependsOn: ApiGatewayDomainName
  #   Properties:
  #     ApiId: !Ref ApiGatewayRestApi
  #     ApiMappingKey: !Ref APIGatewayStage
  #     DomainName: !Ref ApiGatewayDomainName
  #     Stage: !Ref APIGatewayStage

# Outputs:
#   ApiGatewayEndpoint:
#     Value: !Join
#       - ''
#       - - 'https://'
#         - !Ref ApiGatewayDomainName
#         - '/v1'
#     Export:
#       Name: !Sub
#         - ${SystemName}-${EnvType}-apigw-endpoint
#         - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
Outputs:
  ApiGatewayRestApi:
    Value: !Ref ApiGatewayRestApi
    Export:
      Name: !Sub
        - ${SystemName}-${EnvType}-apigw
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
  ApiGatewayStage:
    Value: !Ref ApiGatewayStage
    Export:
      Name: !Sub
        - ${SystemName}-${EnvType}-apigw-stage
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
